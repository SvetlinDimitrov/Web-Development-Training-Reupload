01. Records Count
select count(*) from wizzard_deposits;

02. Longest Magic Wand
select max(magic_wand_size) from wizzard_deposits;

03. Longest Magic Wand per Deposit Groups
select deposit_group ,
max(magic_wand_size) as longest_magic_wand
from wizzard_deposits
group by deposit_group
order by longest_magic_wand  , deposit_group;

04. Smallest Deposit Group per Magic Wand Size
select deposit_group
from wizzard_deposits
group by deposit_group
order by min(magic_wand_size)
limit 1;

05. Deposits Sum
select deposit_group ,
sum(`deposit_amount`) as total_sum
from wizzard_deposits
group by deposit_group
order by total_sum;

06. Deposits Sum for Ollivander Family
select deposit_group ,
sum(`deposit_amount`) as total_sum
from wizzard_deposits
where `magic_wand_creator` = 'Ollivander family'
group by deposit_group
order by deposit_group;

07. Deposits Filter
select deposit_group ,
sum(`deposit_amount`) as total_sum
from wizzard_deposits
where `magic_wand_creator` = 'Ollivander family'
group by deposit_group
having total_sum < 150000
order by total_sum desc;

08. Deposit Charge
select deposit_group ,
`magic_wand_creator`,
min(`deposit_charge`) as min_deposit_charge
from wizzard_deposits
group by deposit_group , `magic_wand_creator`
order by `magic_wand_creator` ,`deposit_group`;

09. Age Groups
select 
CASE
    WHEN age between 0 and 10 THEN '[0-10]'
    WHEN age between 11 and 20 THEN '[11-20]'
    WHEN age between 21 and 30 THEN '[21-30]'
    WHEN age between 31 and 40 THEN '[31-40]'
    WHEN age between 41 and 50 THEN '[41-50]'
    WHEN age between 51 and 60 THEN '[51-60]'
    ELSE '[61+]'
END as age_group ,
count(*)
from `wizzard_deposits`
group by age_group
order by age_group;

10. First Letter
select distinct
substring(first_name , 1 ,1) as first_latter
from wizzard_deposits
where `deposit_group` = 'Troll Chest'
order by first_latter;

11. Average Interest
select
deposit_group,
`is_deposit_expired`,
avg(`deposit_interest`) as average_interest
from wizzard_deposits
where `deposit_start_date` > '1985-01-01'
group by `deposit_group`, `is_deposit_expired`
order by deposit_group desc ,is_deposit_expired ;

12. Employees Minimum Salaries
select department_id ,
min(salary) as minimum_salary
from employees
where department_id in (2,5,7)
group by department_id
order by department_id;

13. Employees Average Salaries
select department_id ,
avg( IF(department_id = 1, salary + 5000, salary)) as avg_salary
from employees
where salary > 30000 and manager_id != 42
group by department_id
order by department_id;

14. Employees Maximum Salaries
select department_id ,
max(salary) as max_salary
from employees
group by department_id
having max_salary not between 30000 and 70000
order by department_id;

15. Employees Count Salaries
select count(*) 
from employees
where manager_id is null;

16. 3rd Highest Salary
select e2.department_id,
(
	select distinct salary 
	from employees as e1
    where e1.department_id = e2.department_id
    order by e1.salary desc
    limit 1 offset 2

) as third_hifhest_salary
from employees as e2 
group by e2.department_id
having third_hifhest_salary is not null
order by department_id;

17. Salary Challenge
select first_name,
last_name,
department_id
from employees as e1
where (

	select avg(salary)
    from employees as e2
    where e2.department_id = e1.department_id
    group by e2.department_id

) < salary
order by department_id , employee_id
limit 10;

18. Departments Total Salaries
select 
department_id,
sum(salary)
from employees
group by department_id
order by department_id;


